// <auto-generated />
using System;
using BlackJack.DataAccess.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BlackJack.DataAccess.Migrations
{
    [DbContext(typeof(GameContext))]
    [Migration("20190313114750_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BlackJack.DataAccess.Entities.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<int>("Suit");

                    b.HasKey("Id");

                    b.ToTable("Card");
                });

            modelBuilder.Entity("BlackJack.DataAccess.Entities.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndTime");

                    b.Property<DateTime>("StartTime");

                    b.HasKey("Id");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("BlackJack.DataAccess.Entities.GottenCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CardId");

                    b.Property<int?>("PlayerId");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.HasIndex("PlayerId");

                    b.ToTable("GottenCards");
                });

            modelBuilder.Entity("BlackJack.DataAccess.Entities.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Bet");

                    b.Property<decimal>("Cash");

                    b.Property<bool>("IsDealer");

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("BlackJack.DataAccess.Entities.Round", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("GameId");

                    b.Property<int>("Index");

                    b.Property<int>("PlayerForeignKey");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("PlayerForeignKey")
                        .IsUnique();

                    b.ToTable("Rounds");
                });

            modelBuilder.Entity("BlackJack.DataAccess.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Money");

                    b.Property<string>("Name");

                    b.Property<int>("PlayerForeignKey");

                    b.HasKey("Id");

                    b.HasIndex("PlayerForeignKey")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BlackJack.DataAccess.Entities.GottenCard", b =>
                {
                    b.HasOne("BlackJack.DataAccess.Entities.Card", "Card")
                        .WithMany()
                        .HasForeignKey("CardId");

                    b.HasOne("BlackJack.DataAccess.Entities.Player", "Player")
                        .WithMany("GottenCards")
                        .HasForeignKey("PlayerId");
                });

            modelBuilder.Entity("BlackJack.DataAccess.Entities.Round", b =>
                {
                    b.HasOne("BlackJack.DataAccess.Entities.Game", "Game")
                        .WithMany("Rounds")
                        .HasForeignKey("GameId");

                    b.HasOne("BlackJack.DataAccess.Entities.Player", "Player")
                        .WithOne("Round")
                        .HasForeignKey("BlackJack.DataAccess.Entities.Round", "PlayerForeignKey")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BlackJack.DataAccess.Entities.User", b =>
                {
                    b.HasOne("BlackJack.DataAccess.Entities.Player", "Player")
                        .WithOne("User")
                        .HasForeignKey("BlackJack.DataAccess.Entities.User", "PlayerForeignKey")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
